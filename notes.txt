& "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.8_3.8.2800.0_x64__qbz5n2kfra8p0\python3.8.exe" -m venv .venv
.venv\Scripts\activate  

curiousscanner/
├── app.py                ← Streamlit app
├── utils.py              ← Core logic
├── corrections_log.json  ← Stores corrections
└── sample_id_card.jpg    ← (Optional sample image)


pip install streamlit opencv-python pytesseract pillow
streamlit run app.py


curiousscanner/
├── app.py
├── utils.py
├── corrections_log.json
├── generate_spacy_data.py   ← [STEP 1]
├── config.cfg               ← [STEP 2]
├── training_data.spacy      ← [STEP 1 Output]
├── ner_model/               ← [STEP 3 Output]


python generate_spacy_data.py
python -m spacy train config.cfg --output ner_model
python -m spacy evaluate ner_model/model-best training_data.spacy


User uploads → OCR → Predict doc_type → Parse fields (NER) → User corrects → Save → Model updated or retrained











🧪 ✅ How to Test the Full Flow
Here’s your step-by-step execution checklist:

🔧 1. ✅ (Optional) Clean Start
If you're testing from scratch:


del classifier_model.pkl
del training_*.spacy
rd /s /q ner_model
📦 2. ✅ Train the Document Type Classifier

python document_classifier.py
This reads from corrections_log.json and creates:


classifier_model.pkl
✅ Make sure it prints:
[ok] Retrained document classifier with X samples.

🧠 3. ✅ Train All NER Models by Document Type

python generate_spacy_data.py
This will:

Create files like training_student.spacy, training_employee.spacy, etc.

Train models into ner_model/student/model-best, ner_model/employee/model-best, etc.

✅ Output should include:

[ok] Saved training data: training_student.spacy
[ok] Model for 'student' saved to: ner_model/student
🚀 4. ✅ Run the App

streamlit run app.py
Then in your browser:

Upload an ID card, invoice, etc.

Watch the detected type

See parsed fields

Make corrections

Click ✅ Save Correction

✅ Should:

Show detected doc_type

Show extracted fields

Save correction in corrections_log.json

Apply online update and save updated model to:
ner_model/<doc_type>/model-best

🔁 5. ✅ Test Retrain Button
Click 🚀 Retrain Now in the UI.

✅ It should:

Regenerate .spacy training files

Retrain models per doc_type

Output updated stats

Show last used correction

Plot reward trend